/* src/components/VoiceInput.css */

/* Container styling */
.voice-input-container {
    display: flex;
    flex-direction: column;
    align-items: center;
    margin-top: 20px;
  }
  
  /* Input styling */
  input[type="text"] {
    width: 100%;
    max-width: 400px;
    padding: 12px;
    margin: 20px 0;
    border-radius: 10px;
    border: 2px solid #ccc;
    font-size: 1.1rem;
    background-color: #f0f4ff;
    color: #333;
    outline: none;
    transition: all 0.3s ease;
  }
  
  input[type="text"]:focus {
    border-color: #7a4fff;
    background-color: #eef1ff;
  }
  
  /* Button styling */
  button {
    padding: 12px 24px;
    font-size: 1rem;
    font-weight: 500;
    color: #ffffff;
    background: linear-gradient(135deg, #7a4fff, #c084fc);
    border: none;
    border-radius: 12px;
    cursor: pointer;
    transition: all 0.3s ease;
  }
  
  button:hover {
    background: linear-gradient(135deg, #6a3ec7, #ab73ff);
  }
  
  /* Typing effect styling */
  p {
    font-size: 1.1rem;
    color: #555;
    margin-top: 15px;
    padding: 10px;
    background-color: #e6f0ff;
    border-radius: 8px;
    max-width: 90%;
    word-wrap: break-word;
    text-align: center;
    white-space: nowrap; /* Ensure no text wrapping */
    overflow: hidden; /* Hide overflow during typing effect */
    letter-spacing: 1px;
    animation: typing 3s steps(40) 1; /* Optional: animate typing for more effect */
  }
  
  /* Optional typing animation */
  @keyframes typing {
    from {
      width: 0;
    }
    to {
      width: 100%;
    }
  }
  
  /* Wave animation styling */
  .wave-container {
    position: relative;
    display: flex;
    justify-content: center;
    align-items: center;
    margin-top: 20px;
  }
  
  .wave, .wave-layer-2, .wave-layer-3 {
    position: absolute;
    width: 100%;
    height: 10px;
    background-color: #7a4fff;
    animation: wave-animation 1.5s infinite;
  }
  
  .wave-layer-2 {
    animation-duration: 2s;
  }
  
  .wave-layer-3 {
    animation-duration: 2.5s;
  }
  
  @keyframes wave-animation {
    0% {
      transform: scaleX(1) translateX(0);
    }
    50% {
      transform: scaleX(1.2) translateX(-50%);
    }
    100% {
      transform: scaleX(1) translateX(0);
    }
  }
  